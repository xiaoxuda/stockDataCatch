# rootLogger定义debug级别的日志输出，如果定义为off可以关闭日志输出，子类可以继承和覆盖父类的日志设置
log4j.rootLogger=info, stdout

# 输出日志到控制台，输出调用日志输出语句的代码所在文件名称和代码所在行数.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) [%d{yyyy-MM-dd HH:mm:ss:SSS}] - %m%n

# 输出日志到文件，当文件达到设定大小时切换到新的文件，保留旧文件的一个副本，副本名称为原来名称加上.
log4j.appender.DEFAULT=org.apache.log4j.RollingFileAppender
log4j.appender.DEFAULT.File=logs/default.log
# 日志文件容量最大值
log4j.appender.DEFAULT.MaxFileSize=1024KB
# 最多保存10个日志的备份，默认名称格式log.index
log4j.appender.DEFAULT.MaxBackupIndex=10
# 输出的日志级别
log4j.appender.DEFAULT.threshold=info
log4j.appender.DEFAULT.layout=org.apache.log4j.PatternLayout
log4j.appender.DEFAULT.layout.ConversionPattern=%5p [%t] (%F:%L) [%d{yyyy-MM-dd HH:mm:ss:SSS}] - %m%n


# 为爬虫框架自定义输出级别和输出目的地,并且不使用父类的appender
log4j.additivity.com.kimi.stockanalysis=false
log4j.logger.com.kimi.stockanalysis=info, stdout

# 输出日志到文件，当文件达到设定大小时切换到新的文件，保留旧文件的一个副本，副本名称为原来名称加上.
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=logs/catcher.log
# 日志文件容量最大值
log4j.appender.R.MaxFileSize=1024KB
# 最多保存10个日志的备份，默认名称格式log.index
log4j.appender.R.MaxBackupIndex=10
# 输出的日志级别
log4j.appender.R.threshold=info
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%5p [%t] (%F:%L) [%d{yyyy-MM-dd HH:mm:ss:SSS}] - %m%n